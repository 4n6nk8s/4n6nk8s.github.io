<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>4n6 &amp; k8s • Posts by &#34;kubernetes&#34; tag</title>
    <link href="http://example.com" />
    <updated>2022-09-08T00:47:58.000Z</updated>
    <category term="kubernetes" />
    <entry>
        <id>http://example.com/2022/09/08/Kubernetes/private-docker-k8s/</id>
        <title>Dockerize a website &amp; Pull it privately in k8s</title>
        <link rel="alternate" href="http://example.com/2022/09/08/Kubernetes/private-docker-k8s/"/>
        <content type="html">&lt;p&gt;In this article you will learn how to containerize a static website using nginx. Then we will push a private docker image in dockerhub. Finally we will use this private image to be pulled in our Kubernetes cluster ! I will split this article to 2 small and easy steps, you can skip any one you want !&lt;/p&gt;
&lt;h1 id=&#34;containerize-a-static-website-and-push-it-on-dockerhub&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#containerize-a-static-website-and-push-it-on-dockerhub&#34;&gt;#&lt;/a&gt; Containerize a static website and push it on dockerhub&lt;/h1&gt;
&lt;p&gt;In this Section we will choose a template from random websites that provides free css templates, then we will dockerize it !&lt;/p&gt;
&lt;h2 id=&#34;dockerize-the-website&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dockerize-the-website&#34;&gt;#&lt;/a&gt; Dockerize the website&lt;/h2&gt;
&lt;p&gt;I’ll choose this template from this &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZS1jc3MuY29tL2ZyZWUtY3NzLXRlbXBsYXRlcy9wYWdlMjgyL3JveWFsLWNhcnM=&#34;&gt;link&lt;/span&gt;&lt;br&gt;
&lt;img data-src=&#34;https://imgur.com/ngHGyw0.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Download it and let’s create our Dockerfile !&lt;br&gt;
We will use the  &lt;code&gt;nginx:alpine&lt;/code&gt;  image and copy all the assets of the website to the  &lt;code&gt;/usr/share/nginx/html&lt;/code&gt;  to be hosted by the nginx webserver.&lt;/p&gt;
&lt;figure class=&#34;highlight dockerfile&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; nginx:alpine&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;WORKDIR&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; /usr/share/nginx/html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;RUN&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; &lt;span class=&#34;built_in&#34;&gt;rm&lt;/span&gt; -rf ./*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;COPY&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; ./ ./&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;RUN&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; &lt;span class=&#34;built_in&#34;&gt;chmod&lt;/span&gt; +r -R . &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ENTRYPOINT&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; [&lt;span class=&#34;string&#34;&gt;&amp;quot;nginx&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;-g&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;daemon off;&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now it’s time to build the container image&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;raf@4n6nk8s:~$ sudo docker build . -t &amp;lt;user_name&amp;gt;/cars-app&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Sending build context to Docker daemon  2.454MB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Step 1/5 : FROM nginx:alpine&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alpine: Pulling from library/nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;213ec9aee27d: Downloading [===================================&amp;gt;               ]  2.018MB/2.806MB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2546ae67167b: Downloading [=========&amp;gt;                                         ]  1.461MB/7.403MB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23b845224e13: Download complete&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9bd5732789a3: Download complete&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;328309e59ded: Waiting&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b231d02e5150: Waiting&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now let’s create a container to test it before make push it!&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;raf@4n6nk8s:~$ sudo docker run --name car-demo -p 8686:80 &amp;lt;user_name&amp;gt;/cars-app&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2022/09/08 22:53:47 [notice] 1&lt;span class=&#34;comment&#34;&gt;#1: using the &amp;quot;epoll&amp;quot; event method&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2022/09/08 22:53:47 [notice] 1&lt;span class=&#34;comment&#34;&gt;#1: nginx/1.23.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2022/09/08 22:53:47 [notice] 1&lt;span class=&#34;comment&#34;&gt;#1: built by gcc 11.2.1 20220219 (Alpine 11.2.1_git20220219)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2022/09/08 22:53:47 [notice] 1&lt;span class=&#34;comment&#34;&gt;#1: OS: Linux 5.15.0-41-generic&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2022/09/08 22:53:47 [notice] 1&lt;span class=&#34;comment&#34;&gt;#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2022/09/08 22:53:47 [notice] 1&lt;span class=&#34;comment&#34;&gt;#1: start worker processes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2022/09/08 22:53:47 [notice] 1&lt;span class=&#34;comment&#34;&gt;#1: start worker process 7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2022/09/08 22:53:47 [notice] 1&lt;span class=&#34;comment&#34;&gt;#1: start worker process 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2022/09/08 22:53:47 [notice] 1&lt;span class=&#34;comment&#34;&gt;#1: start worker process 9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2022/09/08 22:53:47 [notice] 1&lt;span class=&#34;comment&#34;&gt;#1: start worker process 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Sanity Check please ! Oh everything is OK !&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/nQ6NcxG.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;push-the-container-image-to-private-repo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#push-the-container-image-to-private-repo&#34;&gt;#&lt;/a&gt; Push the container image to private repo&lt;/h2&gt;
&lt;p&gt;Now go and create a private repository in your dockerhub to push it !&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;raf@4n6nk8s:~$ sudo docker image push &amp;lt;user_name&amp;gt;/cars-app&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Using default tag: latest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;The push refers to repository [docker.io/&amp;lt;user_name&amp;gt;/cars-app]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41c30355eff8: Pushed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f2ba5e032e84: Pushed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43e1f37b87cb: Pushed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bf4e176a4d9b: Mounted from library/nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a1d571e4e83d: Mounted from library/nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6d97b4d00719: Mounted from library/nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2a7647ca3937: Mounted from library/nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;549c42eea4a6: Mounted from library/nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;994393dc58e7: Mounted from library/nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now it’s time to deal with our kubernetes cluster !&lt;/p&gt;
&lt;h1 id=&#34;use-the-private-docker-image-in-kubernetes&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#use-the-private-docker-image-in-kubernetes&#34;&gt;#&lt;/a&gt; Use the private docker image in Kubernetes&lt;/h1&gt;
&lt;p&gt;In this demo I will use a production kubernetes cluster with 1 master node and 1 worker node&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;raf@4n6nk8s:~$ kubectl get nodes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NAME      STATUS   ROLES                  AGE   VERSION&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;master    Ready    control-plane,master   77d   v1.23.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;worker1   Ready    &amp;lt;none&amp;gt;                 77d   v1.23.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Let’s create a namespace for this demo !&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;raf@4n6nk8s:~$ kubectl create ns private-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;namespace/private-docker created&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To make our cluster pull private images we need to create a special secret object with specific type called  &lt;code&gt;docker-registry&lt;/code&gt;  secret. To make this secret work correctly you must specify the docker registry, username , password and docker email!&lt;/p&gt;
&lt;p&gt;I prefer to put this params in variable environment to work with it easly&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;export&lt;/span&gt; EMAIL=&amp;lt;email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;export&lt;/span&gt; USERNAME=&amp;lt;user_name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;export&lt;/span&gt; PASSWORD=&amp;lt;password&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;export&lt;/span&gt; SERVER=&amp;lt;docker_registry&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;In case you will use dockerhub as your registry you don’t have to specify the server !&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;raf@4n6nk8s:~$ kubectl create -n private-docker secret docker-registry docker-secret --docker-username=$USERNAME --docker-password=$PASSWORD --docker-email=$EMAIL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;secret/docker-secret created&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now let’s create a pod with the image that we made it !&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;apiVersion:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;v1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;kind:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Pod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;creationTimestamp:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;cars-app-pod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;cars-app-pod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;namespace:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;private-docker&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;containers:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;image:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;user_name&amp;gt;/cars-app&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;cars-app-pod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;resources:&lt;/span&gt; &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;dnsPolicy:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;ClusterFirst&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;restartPolicy:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Always&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;status:&lt;/span&gt; &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;If you try create this pod with this YAML definition you’ll get a  &lt;code&gt;ErrImagePull&lt;/code&gt;  because we don’t specify the docker secret that we created&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;raf@4n6nk8s:~$ kubectl get pods -n private-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NAME           READY   STATUS         RESTARTS   AGE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cars-app-pod   0/1     ErrImagePull   0          5s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Let’s figure out the problem with  &lt;code&gt;kubectl describe&lt;/code&gt;  command. Take a look at the events that occur when the pod try to pull the container image!&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Events:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Type     Reason          Age                From               Message&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ----     ------          ----               ----               -------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Normal   Scheduled       44s                default-scheduler  Successfully assigned private-docker/cars-app-pod to worker1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Normal   SandboxChanged  40s                kubelet            Pod sandbox changed, it will be killed and re-created.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Normal   Pulling         26s (x2 over 43s)  kubelet            Pulling image &amp;quot;&amp;lt;user_name&amp;gt;/cars-app&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Warning  Failed          23s (x2 over 40s)  kubelet            Failed to pull image &amp;quot;&amp;lt;user_name&amp;gt;/cars-app&amp;quot;: rpc error: code = Unknown desc = Error response from daemon: pull access denied for &amp;lt;user_name&amp;gt;/cars-app, repository does not exist or may require &amp;#x27;docker login&amp;#x27;: denied: requested access to the resource is denied&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Warning  Failed          23s (x2 over 40s)  kubelet            Error: ErrImagePull&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Normal   BackOff         12s (x4 over 39s)  kubelet            Back-off pulling image &amp;quot;&amp;lt;user_name&amp;gt;/cars-app&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Warning  Failed          12s (x4 over 39s)  kubelet            Error: ImagePullBackOff&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Specifying the docker secret in the pod YAML definition will solve this problem. The pod will pull the container image without any problem&lt;br&gt;
Adding  &lt;code&gt;imagePullSecrets&lt;/code&gt;  attributes in the  &lt;code&gt;spec&lt;/code&gt;  of the pod allow the pod to pull this image. The Final YAML definition will be similar to the following one !&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;apiVersion:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;v1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;kind:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Pod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;creationTimestamp:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;cars-app-pod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;cars-app-pod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;namespace:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;private-docker&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;containers:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;image:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;user_name&amp;gt;/cars-app&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;cars-app-pod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;resources:&lt;/span&gt; &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;imagePullSecrets:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;docker-secret&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;dnsPolicy:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;ClusterFirst&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;restartPolicy:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Always&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;status:&lt;/span&gt; &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Create the pod again and check it with  &lt;code&gt;kubectl get pods&lt;/code&gt;  and don’t forget to specify the namespace!&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;raf@4n6nk8s:~$ kubectl get pods -n private-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NAME           READY   STATUS    RESTARTS   AGE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cars-app-pod   1/1     Running   0          4s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;I want to make sure that everything is ok, so i will expose this pod using the NodePort service. The following service YAML Definition will expose the pod correctly :&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;figcaption&gt;&lt;span&gt;yaml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;apiVersion:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;v1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;kind:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Service&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;creationTimestamp:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;cars-app-pod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;cars-app-pod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;namespace:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;private-docker&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;ports:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;port:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;protocol:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;TCP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;targetPort:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;selector:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;cars-app-pod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;type:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;NodePort&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Let’s now check the service and get the node port that we will use it to test the pod&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;command line prompt&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;raf@4n6nk8s:~$ kubectl get svc -n private-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NAME           TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cars-app-pod   NodePort   10.111.98.22   &amp;lt;none&amp;gt;        80:31651/TCP   6s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now you can visit either &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21hc3RlcjozMTY1MQ==&#34;&gt;http://master:31651&lt;/span&gt; or &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3dvcmtlcjE6MzE2NTE=&#34;&gt;http://worker1:31651&lt;/span&gt; and you will find the static website work without any problem!&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://imgur.com/3TVOl36.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
        <category term="kubernetes" />
        <updated>2022-09-08T00:47:58.000Z</updated>
    </entry>
</feed>
